public class Main {

    public static void main(String[] args) {
        
        SimpleDate date = new SimpleDate(29, 12, 2015);
        
        
        System.out.println("Friday of the examined week is " + date);

        SimpleDate newDate = date.afterNumberOfDays(7);
        int week = 1;
        while (week <= 7) {
            System.out.println("Friday after " + week + " weeks is " + newDate);
            newDate = newDate.afterNumberOfDays(7);

            week = week + 1;
        }


        System.out.println("The date after 790 days from the examined Friday is ... try it out yourself!");
            System.out.println("Try " + date.afterNumberOfDays(790));
        
    }
}

public class SimpleDate {

    private int day;
    private int month;
    private int year;

    public SimpleDate(int day, int month, int year) {
        this.day = day;
        this.month = month;
        this.year = year;
    }

    @Override
    public String toString() {
        return this.day + "." + this.month + "." + this.year;
    }

    public boolean before(SimpleDate compared) {
        if (this.year < compared.year) {
            return true;
        }

        if (this.year == compared.year && this.month < compared.month) {
            return true;
        }

        if (this.year == compared.year && this.month == compared.month &&
                 this.day < compared.day) {
            return true;
        }

        return false;
    }
    
    public void advance() {
        if (this.day < 30) {
            this.day += 1;
        } else {
            this.day = 1;
            
            if (this.month < 12) {
                this.month += 1;
            } else {
                this.month = 1;
                this.year += 1;
            }
            
        }
    }
    
    public void advance(int howManyDays) {
        for (int i = 0; i < howManyDays; i++) {
            if (this.day < 30) {
                this.day += 1;
            } else {
                this.day = 1;
            
                if (this.month < 12) {
                    this.month += 1;
                } else {
                    this.month = 1;
                    this.year += 1;
                }
            
            }

        }
            
    }
    
    public SimpleDate afterNumberOfDays(int days) {
        SimpleDate newDate = new SimpleDate(this.day, this.month, this.year);
        
        newDate.advance(days);
        
        return newDate;
    }

}
