public class Main {

    public static void main(String[] args) {
        // the following is the same sample program shown in ex 8.13 description
        
        VehicleRegistry vr = new VehicleRegistry(); 
        LicensePlate missouri = new LicensePlate("MO", "5H6-892");
        LicensePlate california = new LicensePlate("CA", "OUTA-TIME");
        LicensePlate florida = new LicensePlate("FL", "TE4-G7Y");
        vr.add(missouri, "Jacob Hobbs");
        vr.add(california, "Marty McFly");
        vr.add(florida, "Jacob Hobbs");
        
        System.out.println("Missouri Driver: " + vr.get(missouri));
        System.out.println("California Driver: " + vr.get(california));
        System.out.println("------------------------");
        vr.printLicensePlates();
        System.out.println("------------------------");
        vr.printOwners();
        
        
        
    }
}

import java.util.Objects;

public class LicensePlate {
    // don't modify existing parts of this class

    // these instance variables have been defined as final, meaning 
    // that once set, their value can't be changed
    private final String liNumber;
    private final String country;

    public LicensePlate(String country, String liNumber) {
        this.liNumber = liNumber;
        this.country = country;
    }

    @Override
    public String toString() {
        return country + " " + liNumber;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 41 * hash + Objects.hashCode(this.liNumber);
        hash = 41 * hash + Objects.hashCode(this.country);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final LicensePlate other = (LicensePlate) obj;
        if (!Objects.equals(this.liNumber, other.liNumber)) {
            return false;
        }
        if (!Objects.equals(this.country, other.country)) {
            return false;
        }
        return true;
    }
    
}

import java.util.ArrayList;
import java.util.HashMap;


public class VehicleRegistry {
    
    private HashMap<LicensePlate, String> vehicleRegistryHashMap;
    
    public VehicleRegistry() {
        this.vehicleRegistryHashMap = new HashMap<>();
        
    }
    
    public boolean add(LicensePlate licensePlate, String owner) {
        for (LicensePlate e : vehicleRegistryHashMap.keySet()) {
            if (e.equals(licensePlate)) {
                return false;

            }

        }
        vehicleRegistryHashMap.put(licensePlate, owner);

        return true;
    }
    
    public String get(LicensePlate licensePlate) {
        
        for (LicensePlate plate: this.vehicleRegistryHashMap.keySet()) {
            if (plate.equals(licensePlate)) {
                return this.vehicleRegistryHashMap.get(plate);
            }
        }
        return null; 
    }
    
    public boolean remove(LicensePlate licensePlate) {
        
        for (LicensePlate plate: this.vehicleRegistryHashMap.keySet()) {
            if (plate.equals(licensePlate)) {
                this.vehicleRegistryHashMap.remove(plate);
                return true;
            }
        }
        return false; 
    }
    
    public String toString() {
        for (LicensePlate key: this.vehicleRegistryHashMap.keySet()) {
            return "Plate: " + key + ". Owner: " + this.vehicleRegistryHashMap.get(key) + ".";
        }
        return null;
    }
    
    public void printLicensePlates() {
        for (LicensePlate key: this.vehicleRegistryHashMap.keySet()) {
            System.out.println(key);
        }
    }
    
    public void printOwners() {
        ArrayList<String> owners = new ArrayList<>();
        for (LicensePlate key: this.vehicleRegistryHashMap.keySet()) {
            if (!owners.contains(this.vehicleRegistryHashMap.get(key))) {
                owners.add(this.vehicleRegistryHashMap.get(key));
            }
        }
        
        for (String owner: owners) {
            System.out.println(owner);
        }
        
    }
  
    
}
